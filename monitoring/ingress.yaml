apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: crm-issuer
  namespace: monitoring
spec:
  acme:
    email: hoaian412003@gmail.com
    # We use the staging server here for testing to avoid hitting
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # if not existing, it will register a new account and stores it
      name: dashboard-key
    solvers:
      - http01:
          # The ingressClass used to create the necessary ingress routes
          ingress:
            class: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    name: alertmanager
  annotations:
    cert-manager.io/issuer: "crm-issuer"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  tls:
    - hosts:
        - alertmanager.relationc.com
      secretName: alertmanager-ssl
  rules:
    - host: alertmanager.relationc.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: alertmanager-operated
                port:
                  number: 9093
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring
  namespace: monitoring
  labels:
    name: monitoring
  annotations:
    cert-manager.io/issuer: "crm-issuer"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  tls:
    - hosts:
        - monitoring.relationc.com
      secretName: monitoring-ssl
  rules:
    - host: monitoring.relationc.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: prometheus-grafana-stack
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    name: prometheus
  annotations:
    cert-manager.io/issuer: "crm-issuer"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  tls:
    - hosts:
        - prometheus.relationc.com
      secretName: prometheus-ssl
  rules:
    - host: prometheus.relationc.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: prometheus-operated
                port:
                  number: 9090
